// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: clavata/gateway/v1/api_tokens.proto

package v1

import (
	v1 "github.com/clavataai/monorail/libs/protobufs/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APITokenStatus int32

const (
	APITokenStatus_API_TOKEN_UNSPECIFIED APITokenStatus = 0
	// The token is enabled and can be used
	APITokenStatus_API_TOKEN_ENABLED APITokenStatus = 1
	// The token is still valid but is (hopefully temporarily) disabled by Clavata to prevent use
	// Primarily an emergency measure to prevent abuse / stop traffic from a customer
	// without needing to outright revoke the token (which would require regeneration of the token, etc)
	APITokenStatus_API_TOKEN_DISABLED APITokenStatus = 2
	// Token is no longer usable, cannot be re-enabled
	APITokenStatus_API_TOKEN_REVOKED APITokenStatus = 3
)

// Enum value maps for APITokenStatus.
var (
	APITokenStatus_name = map[int32]string{
		0: "API_TOKEN_UNSPECIFIED",
		1: "API_TOKEN_ENABLED",
		2: "API_TOKEN_DISABLED",
		3: "API_TOKEN_REVOKED",
	}
	APITokenStatus_value = map[string]int32{
		"API_TOKEN_UNSPECIFIED": 0,
		"API_TOKEN_ENABLED":     1,
		"API_TOKEN_DISABLED":    2,
		"API_TOKEN_REVOKED":     3,
	}
)

func (x APITokenStatus) Enum() *APITokenStatus {
	p := new(APITokenStatus)
	*p = x
	return p
}

func (x APITokenStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APITokenStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_clavata_gateway_v1_api_tokens_proto_enumTypes[0].Descriptor()
}

func (APITokenStatus) Type() protoreflect.EnumType {
	return &file_clavata_gateway_v1_api_tokens_proto_enumTypes[0]
}

func (x APITokenStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APITokenStatus.Descriptor instead.
func (APITokenStatus) EnumDescriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{0}
}

type GenerateAPITokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how long the token should remain valid
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Name     string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// the user_id of the user to generate the token for
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GenerateAPITokenRequest) Reset() {
	*x = GenerateAPITokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAPITokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAPITokenRequest) ProtoMessage() {}

func (x *GenerateAPITokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAPITokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAPITokenRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateAPITokenRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *GenerateAPITokenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateAPITokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GenerateAPITokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The token
	UserInfo *v1.UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	// An error occurred during generation
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// id of created ApiToken record
	ApiTokenId string `protobuf:"bytes,3,opt,name=api_token_id,json=apiTokenId,proto3" json:"api_token_id,omitempty"`
}

func (x *GenerateAPITokenResponse) Reset() {
	*x = GenerateAPITokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAPITokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAPITokenResponse) ProtoMessage() {}

func (x *GenerateAPITokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAPITokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAPITokenResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateAPITokenResponse) GetUserInfo() *v1.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GenerateAPITokenResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GenerateAPITokenResponse) GetApiTokenId() string {
	if x != nil {
		return x.ApiTokenId
	}
	return ""
}

type ListAllAPITokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer id to filter down to
	CustomerId *string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof" json:"customer_id,omitempty"`
}

func (x *ListAllAPITokensRequest) Reset() {
	*x = ListAllAPITokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllAPITokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllAPITokensRequest) ProtoMessage() {}

func (x *ListAllAPITokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllAPITokensRequest.ProtoReflect.Descriptor instead.
func (*ListAllAPITokensRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{2}
}

func (x *ListAllAPITokensRequest) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

type APIToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// created at time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated at time, if disabled or revoked
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// user-created name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// token expiration date
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// token status
	Status APITokenStatus `protobuf:"varint,6,opt,name=status,proto3,enum=clavata.gateway.v1.APITokenStatus" json:"status,omitempty"`
	// customer_id
	CustomerId string `protobuf:"bytes,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// user who the token is for
	UserId string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// user who generated the token
	CreatedByUserId string `protobuf:"bytes,9,opt,name=created_by_user_id,json=createdByUserId,proto3" json:"created_by_user_id,omitempty"`
	// user who last updated the token
	UpdatedByUserId string `protobuf:"bytes,10,opt,name=updated_by_user_id,json=updatedByUserId,proto3" json:"updated_by_user_id,omitempty"`
	// user email
	UserEmail string `protobuf:"bytes,11,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	// the end of the token
	Signature string `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *APIToken) Reset() {
	*x = APIToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIToken) ProtoMessage() {}

func (x *APIToken) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIToken.ProtoReflect.Descriptor instead.
func (*APIToken) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{3}
}

func (x *APIToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *APIToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *APIToken) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *APIToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APIToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *APIToken) GetStatus() APITokenStatus {
	if x != nil {
		return x.Status
	}
	return APITokenStatus_API_TOKEN_UNSPECIFIED
}

func (x *APIToken) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *APIToken) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *APIToken) GetCreatedByUserId() string {
	if x != nil {
		return x.CreatedByUserId
	}
	return ""
}

func (x *APIToken) GetUpdatedByUserId() string {
	if x != nil {
		return x.UpdatedByUserId
	}
	return ""
}

func (x *APIToken) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *APIToken) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type ListAllAPITokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested tokens
	ApiTokens []*APIToken `protobuf:"bytes,1,rep,name=api_tokens,json=apiTokens,proto3" json:"api_tokens,omitempty"`
}

func (x *ListAllAPITokensResponse) Reset() {
	*x = ListAllAPITokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllAPITokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllAPITokensResponse) ProtoMessage() {}

func (x *ListAllAPITokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllAPITokensResponse.ProtoReflect.Descriptor instead.
func (*ListAllAPITokensResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{4}
}

func (x *ListAllAPITokensResponse) GetApiTokens() []*APIToken {
	if x != nil {
		return x.ApiTokens
	}
	return nil
}

type UpdateAPITokenStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// token status
	Status APITokenStatus `protobuf:"varint,2,opt,name=status,proto3,enum=clavata.gateway.v1.APITokenStatus" json:"status,omitempty"`
}

func (x *UpdateAPITokenStatusRequest) Reset() {
	*x = UpdateAPITokenStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPITokenStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPITokenStatusRequest) ProtoMessage() {}

func (x *UpdateAPITokenStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPITokenStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPITokenStatusRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAPITokenStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAPITokenStatusRequest) GetStatus() APITokenStatus {
	if x != nil {
		return x.Status
	}
	return APITokenStatus_API_TOKEN_UNSPECIFIED
}

type UpdateAPITokenStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// token status
	Status APITokenStatus `protobuf:"varint,2,opt,name=status,proto3,enum=clavata.gateway.v1.APITokenStatus" json:"status,omitempty"`
}

func (x *UpdateAPITokenStatusResponse) Reset() {
	*x = UpdateAPITokenStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPITokenStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPITokenStatusResponse) ProtoMessage() {}

func (x *UpdateAPITokenStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_api_tokens_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPITokenStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPITokenStatusResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAPITokenStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAPITokenStatusResponse) GetStatus() APITokenStatus {
	if x != nil {
		return x.Status
	}
	return APITokenStatus_API_TOKEN_UNSPECIFIED
}

var File_clavata_gateway_v1_api_tokens_proto protoreflect.FileDescriptor

var file_clavata_gateway_v1_api_tokens_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xec, 0x03, 0x0a, 0x08, 0x41, 0x50,
	0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6c,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x57, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50,
	0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x22, 0x69, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x71, 0x0a, 0x0e, 0x41, 0x50, 0x49, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50,
	0x49, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x50, 0x49, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x32, 0xeb, 0x02, 0x0a, 0x10,
	0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x50, 0x49,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x61,
	0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clavata_gateway_v1_api_tokens_proto_rawDescOnce sync.Once
	file_clavata_gateway_v1_api_tokens_proto_rawDescData = file_clavata_gateway_v1_api_tokens_proto_rawDesc
)

func file_clavata_gateway_v1_api_tokens_proto_rawDescGZIP() []byte {
	file_clavata_gateway_v1_api_tokens_proto_rawDescOnce.Do(func() {
		file_clavata_gateway_v1_api_tokens_proto_rawDescData = protoimpl.X.CompressGZIP(file_clavata_gateway_v1_api_tokens_proto_rawDescData)
	})
	return file_clavata_gateway_v1_api_tokens_proto_rawDescData
}

var file_clavata_gateway_v1_api_tokens_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_clavata_gateway_v1_api_tokens_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_clavata_gateway_v1_api_tokens_proto_goTypes = []any{
	(APITokenStatus)(0),                  // 0: clavata.gateway.v1.APITokenStatus
	(*GenerateAPITokenRequest)(nil),      // 1: clavata.gateway.v1.GenerateAPITokenRequest
	(*GenerateAPITokenResponse)(nil),     // 2: clavata.gateway.v1.GenerateAPITokenResponse
	(*ListAllAPITokensRequest)(nil),      // 3: clavata.gateway.v1.ListAllAPITokensRequest
	(*APIToken)(nil),                     // 4: clavata.gateway.v1.APIToken
	(*ListAllAPITokensResponse)(nil),     // 5: clavata.gateway.v1.ListAllAPITokensResponse
	(*UpdateAPITokenStatusRequest)(nil),  // 6: clavata.gateway.v1.UpdateAPITokenStatusRequest
	(*UpdateAPITokenStatusResponse)(nil), // 7: clavata.gateway.v1.UpdateAPITokenStatusResponse
	(*durationpb.Duration)(nil),          // 8: google.protobuf.Duration
	(*v1.UserInfo)(nil),                  // 9: clavata.shared.v1.UserInfo
	(*timestamppb.Timestamp)(nil),        // 10: google.protobuf.Timestamp
}
var file_clavata_gateway_v1_api_tokens_proto_depIdxs = []int32{
	8,  // 0: clavata.gateway.v1.GenerateAPITokenRequest.duration:type_name -> google.protobuf.Duration
	9,  // 1: clavata.gateway.v1.GenerateAPITokenResponse.user_info:type_name -> clavata.shared.v1.UserInfo
	10, // 2: clavata.gateway.v1.APIToken.created_at:type_name -> google.protobuf.Timestamp
	10, // 3: clavata.gateway.v1.APIToken.updated_at:type_name -> google.protobuf.Timestamp
	10, // 4: clavata.gateway.v1.APIToken.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 5: clavata.gateway.v1.APIToken.status:type_name -> clavata.gateway.v1.APITokenStatus
	4,  // 6: clavata.gateway.v1.ListAllAPITokensResponse.api_tokens:type_name -> clavata.gateway.v1.APIToken
	0,  // 7: clavata.gateway.v1.UpdateAPITokenStatusRequest.status:type_name -> clavata.gateway.v1.APITokenStatus
	0,  // 8: clavata.gateway.v1.UpdateAPITokenStatusResponse.status:type_name -> clavata.gateway.v1.APITokenStatus
	1,  // 9: clavata.gateway.v1.APITokensService.GenerateAPIToken:input_type -> clavata.gateway.v1.GenerateAPITokenRequest
	3,  // 10: clavata.gateway.v1.APITokensService.ListAllAPITokens:input_type -> clavata.gateway.v1.ListAllAPITokensRequest
	6,  // 11: clavata.gateway.v1.APITokensService.UpdateAPITokenStatus:input_type -> clavata.gateway.v1.UpdateAPITokenStatusRequest
	2,  // 12: clavata.gateway.v1.APITokensService.GenerateAPIToken:output_type -> clavata.gateway.v1.GenerateAPITokenResponse
	5,  // 13: clavata.gateway.v1.APITokensService.ListAllAPITokens:output_type -> clavata.gateway.v1.ListAllAPITokensResponse
	7,  // 14: clavata.gateway.v1.APITokensService.UpdateAPITokenStatus:output_type -> clavata.gateway.v1.UpdateAPITokenStatusResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_clavata_gateway_v1_api_tokens_proto_init() }
func file_clavata_gateway_v1_api_tokens_proto_init() {
	if File_clavata_gateway_v1_api_tokens_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateAPITokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateAPITokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListAllAPITokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*APIToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListAllAPITokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAPITokenStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_api_tokens_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAPITokenStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_clavata_gateway_v1_api_tokens_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clavata_gateway_v1_api_tokens_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clavata_gateway_v1_api_tokens_proto_goTypes,
		DependencyIndexes: file_clavata_gateway_v1_api_tokens_proto_depIdxs,
		EnumInfos:         file_clavata_gateway_v1_api_tokens_proto_enumTypes,
		MessageInfos:      file_clavata_gateway_v1_api_tokens_proto_msgTypes,
	}.Build()
	File_clavata_gateway_v1_api_tokens_proto = out.File
	file_clavata_gateway_v1_api_tokens_proto_rawDesc = nil
	file_clavata_gateway_v1_api_tokens_proto_goTypes = nil
	file_clavata_gateway_v1_api_tokens_proto_depIdxs = nil
}
