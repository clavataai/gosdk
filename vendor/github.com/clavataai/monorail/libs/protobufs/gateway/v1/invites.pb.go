// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: clavata/gateway/v1/invites.proto

package v1

import (
	v1 "github.com/clavataai/monorail/libs/protobufs/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InviteStatus int32

const (
	InviteStatus_INVITE_STATUS_UNSPECIFIED InviteStatus = 0
	InviteStatus_INVITE_STATUS_PENDING     InviteStatus = 1
	InviteStatus_INVITE_STATUS_ACCEPTED    InviteStatus = 2
	InviteStatus_INVITE_STATUS_EXPIRED     InviteStatus = 3
)

// Enum value maps for InviteStatus.
var (
	InviteStatus_name = map[int32]string{
		0: "INVITE_STATUS_UNSPECIFIED",
		1: "INVITE_STATUS_PENDING",
		2: "INVITE_STATUS_ACCEPTED",
		3: "INVITE_STATUS_EXPIRED",
	}
	InviteStatus_value = map[string]int32{
		"INVITE_STATUS_UNSPECIFIED": 0,
		"INVITE_STATUS_PENDING":     1,
		"INVITE_STATUS_ACCEPTED":    2,
		"INVITE_STATUS_EXPIRED":     3,
	}
)

func (x InviteStatus) Enum() *InviteStatus {
	p := new(InviteStatus)
	*p = x
	return p
}

func (x InviteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_clavata_gateway_v1_invites_proto_enumTypes[0].Descriptor()
}

func (InviteStatus) Type() protoreflect.EnumType {
	return &file_clavata_gateway_v1_invites_proto_enumTypes[0]
}

func (x InviteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteStatus.Descriptor instead.
func (InviteStatus) EnumDescriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{0}
}

type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address of the user to invite
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The role of the user, because of how I expect roles to change in the future, not making this an enum
	Role v1.Role `protobuf:"varint,2,opt,name=role,proto3,enum=clavata.shared.v1.Role" json:"role,omitempty"`
	// Customer Account ID
	CustomerId string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// First name of the user, used in email communications
	FirstName string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Last name of the user
	LastName string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// The URL to redirect the user to after they accept the invite
	// should be in the form https://app.domain.clavata.com/register
	// email will be appended to the URL as a query parameter
	RedirectUrl string `protobuf:"bytes,6,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// The company name for when we're creating a new company
	CustomerName *string `protobuf:"bytes,7,opt,name=customer_name,json=customerName,proto3,oneof" json:"customer_name,omitempty"`
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{0}
}

func (x *InviteRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InviteRequest) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

func (x *InviteRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *InviteRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InviteRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *InviteRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *InviteRequest) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

type InviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// An error occurred during invite
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Customer ID for convenience while using postman
	CustomerId string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *InviteResponse) Reset() {
	*x = InviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResponse) ProtoMessage() {}

func (x *InviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResponse.ProtoReflect.Descriptor instead.
func (*InviteResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{1}
}

func (x *InviteResponse) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *InviteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InviteResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type RenewInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// The URL to redirect the user to after they accept the invite
	RedirectUrl string `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *RenewInviteRequest) Reset() {
	*x = RenewInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewInviteRequest) ProtoMessage() {}

func (x *RenewInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewInviteRequest.ProtoReflect.Descriptor instead.
func (*RenewInviteRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{2}
}

func (x *RenewInviteRequest) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *RenewInviteRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type RenewInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// The new expiration time
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *RenewInviteResponse) Reset() {
	*x = RenewInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewInviteResponse) ProtoMessage() {}

func (x *RenewInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewInviteResponse.ProtoReflect.Descriptor instead.
func (*RenewInviteResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{3}
}

func (x *RenewInviteResponse) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *RenewInviteResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type ListInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *ListInvitesRequest_Query `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *ListInvitesRequest) Reset() {
	*x = ListInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitesRequest) ProtoMessage() {}

func (x *ListInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitesRequest.ProtoReflect.Descriptor instead.
func (*ListInvitesRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{4}
}

func (x *ListInvitesRequest) GetQuery() *ListInvitesRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type InvitedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// The invited user's email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The invited user's role
	Role v1.Role `protobuf:"varint,3,opt,name=role,proto3,enum=clavata.shared.v1.Role" json:"role,omitempty"`
	// The invited user's first name
	FirstName string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// The invited user's last name
	LastName string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// The invite status
	Status InviteStatus `protobuf:"varint,6,opt,name=status,proto3,enum=clavata.gateway.v1.InviteStatus" json:"status,omitempty"`
	// The invitation expiration time
	Expiration *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *InvitedUser) Reset() {
	*x = InvitedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitedUser) ProtoMessage() {}

func (x *InvitedUser) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitedUser.ProtoReflect.Descriptor instead.
func (*InvitedUser) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{5}
}

func (x *InvitedUser) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *InvitedUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InvitedUser) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

func (x *InvitedUser) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InvitedUser) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *InvitedUser) GetStatus() InviteStatus {
	if x != nil {
		return x.Status
	}
	return InviteStatus_INVITE_STATUS_UNSPECIFIED
}

func (x *InvitedUser) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type ListInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitedUsers []*InvitedUser `protobuf:"bytes,1,rep,name=invited_users,json=invitedUsers,proto3" json:"invited_users,omitempty"`
}

func (x *ListInvitesResponse) Reset() {
	*x = ListInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitesResponse) ProtoMessage() {}

func (x *ListInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitesResponse.ProtoReflect.Descriptor instead.
func (*ListInvitesResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{6}
}

func (x *ListInvitesResponse) GetInvitedUsers() []*InvitedUser {
	if x != nil {
		return x.InvitedUsers
	}
	return nil
}

type DeleteInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
}

func (x *DeleteInviteRequest) Reset() {
	*x = DeleteInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInviteRequest) ProtoMessage() {}

func (x *DeleteInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInviteRequest.ProtoReflect.Descriptor instead.
func (*DeleteInviteRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteInviteRequest) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

type DeleteInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invite ID
	InviteId uint32 `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// Was it deleted
	Deleted bool `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteInviteResponse) Reset() {
	*x = DeleteInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInviteResponse) ProtoMessage() {}

func (x *DeleteInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInviteResponse.ProtoReflect.Descriptor instead.
func (*DeleteInviteResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteInviteResponse) GetInviteId() uint32 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *DeleteInviteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type ListInvitesRequest_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by role; ROLE_UNSPECIFIED will match all roles
	Role *v1.Role `protobuf:"varint,1,opt,name=role,proto3,enum=clavata.shared.v1.Role,oneof" json:"role,omitempty"`
	// Filter by status: STATUS_UNSPECIFIED will match all statuses
	Status *InviteStatus `protobuf:"varint,2,opt,name=status,proto3,enum=clavata.gateway.v1.InviteStatus,oneof" json:"status,omitempty"`
}

func (x *ListInvitesRequest_Query) Reset() {
	*x = ListInvitesRequest_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_invites_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitesRequest_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitesRequest_Query) ProtoMessage() {}

func (x *ListInvitesRequest_Query) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_invites_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitesRequest_Query.ProtoReflect.Descriptor instead.
func (*ListInvitesRequest_Query) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_invites_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListInvitesRequest_Query) GetRole() v1.Role {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return v1.Role(0)
}

func (x *ListInvitesRequest_Query) GetStatus() InviteStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return InviteStatus_INVITE_STATUS_UNSPECIFIED
}

var File_clavata_gateway_v1_invites_proto protoreflect.FileDescriptor

var file_clavata_gateway_v1_invites_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54,
	0x0a, 0x12, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x6e, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x1a, 0x8c, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x9f, 0x02,
	0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2a,
	0x7f, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03,
	0x32, 0x84, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x61, 0x69, 0x2f,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clavata_gateway_v1_invites_proto_rawDescOnce sync.Once
	file_clavata_gateway_v1_invites_proto_rawDescData = file_clavata_gateway_v1_invites_proto_rawDesc
)

func file_clavata_gateway_v1_invites_proto_rawDescGZIP() []byte {
	file_clavata_gateway_v1_invites_proto_rawDescOnce.Do(func() {
		file_clavata_gateway_v1_invites_proto_rawDescData = protoimpl.X.CompressGZIP(file_clavata_gateway_v1_invites_proto_rawDescData)
	})
	return file_clavata_gateway_v1_invites_proto_rawDescData
}

var file_clavata_gateway_v1_invites_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_clavata_gateway_v1_invites_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_clavata_gateway_v1_invites_proto_goTypes = []any{
	(InviteStatus)(0),                // 0: clavata.gateway.v1.InviteStatus
	(*InviteRequest)(nil),            // 1: clavata.gateway.v1.InviteRequest
	(*InviteResponse)(nil),           // 2: clavata.gateway.v1.InviteResponse
	(*RenewInviteRequest)(nil),       // 3: clavata.gateway.v1.RenewInviteRequest
	(*RenewInviteResponse)(nil),      // 4: clavata.gateway.v1.RenewInviteResponse
	(*ListInvitesRequest)(nil),       // 5: clavata.gateway.v1.ListInvitesRequest
	(*InvitedUser)(nil),              // 6: clavata.gateway.v1.InvitedUser
	(*ListInvitesResponse)(nil),      // 7: clavata.gateway.v1.ListInvitesResponse
	(*DeleteInviteRequest)(nil),      // 8: clavata.gateway.v1.DeleteInviteRequest
	(*DeleteInviteResponse)(nil),     // 9: clavata.gateway.v1.DeleteInviteResponse
	(*ListInvitesRequest_Query)(nil), // 10: clavata.gateway.v1.ListInvitesRequest.Query
	(v1.Role)(0),                     // 11: clavata.shared.v1.Role
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
}
var file_clavata_gateway_v1_invites_proto_depIdxs = []int32{
	11, // 0: clavata.gateway.v1.InviteRequest.role:type_name -> clavata.shared.v1.Role
	12, // 1: clavata.gateway.v1.RenewInviteResponse.expiration:type_name -> google.protobuf.Timestamp
	10, // 2: clavata.gateway.v1.ListInvitesRequest.query:type_name -> clavata.gateway.v1.ListInvitesRequest.Query
	11, // 3: clavata.gateway.v1.InvitedUser.role:type_name -> clavata.shared.v1.Role
	0,  // 4: clavata.gateway.v1.InvitedUser.status:type_name -> clavata.gateway.v1.InviteStatus
	12, // 5: clavata.gateway.v1.InvitedUser.expiration:type_name -> google.protobuf.Timestamp
	6,  // 6: clavata.gateway.v1.ListInvitesResponse.invited_users:type_name -> clavata.gateway.v1.InvitedUser
	11, // 7: clavata.gateway.v1.ListInvitesRequest.Query.role:type_name -> clavata.shared.v1.Role
	0,  // 8: clavata.gateway.v1.ListInvitesRequest.Query.status:type_name -> clavata.gateway.v1.InviteStatus
	1,  // 9: clavata.gateway.v1.InvitesService.Invite:input_type -> clavata.gateway.v1.InviteRequest
	3,  // 10: clavata.gateway.v1.InvitesService.RenewInvite:input_type -> clavata.gateway.v1.RenewInviteRequest
	5,  // 11: clavata.gateway.v1.InvitesService.ListInvites:input_type -> clavata.gateway.v1.ListInvitesRequest
	8,  // 12: clavata.gateway.v1.InvitesService.DeleteInvite:input_type -> clavata.gateway.v1.DeleteInviteRequest
	2,  // 13: clavata.gateway.v1.InvitesService.Invite:output_type -> clavata.gateway.v1.InviteResponse
	4,  // 14: clavata.gateway.v1.InvitesService.RenewInvite:output_type -> clavata.gateway.v1.RenewInviteResponse
	7,  // 15: clavata.gateway.v1.InvitesService.ListInvites:output_type -> clavata.gateway.v1.ListInvitesResponse
	9,  // 16: clavata.gateway.v1.InvitesService.DeleteInvite:output_type -> clavata.gateway.v1.DeleteInviteResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_clavata_gateway_v1_invites_proto_init() }
func file_clavata_gateway_v1_invites_proto_init() {
	if File_clavata_gateway_v1_invites_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clavata_gateway_v1_invites_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RenewInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RenewInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*InvitedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_invites_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListInvitesRequest_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_clavata_gateway_v1_invites_proto_msgTypes[0].OneofWrappers = []any{}
	file_clavata_gateway_v1_invites_proto_msgTypes[4].OneofWrappers = []any{}
	file_clavata_gateway_v1_invites_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clavata_gateway_v1_invites_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clavata_gateway_v1_invites_proto_goTypes,
		DependencyIndexes: file_clavata_gateway_v1_invites_proto_depIdxs,
		EnumInfos:         file_clavata_gateway_v1_invites_proto_enumTypes,
		MessageInfos:      file_clavata_gateway_v1_invites_proto_msgTypes,
	}.Build()
	File_clavata_gateway_v1_invites_proto = out.File
	file_clavata_gateway_v1_invites_proto_rawDesc = nil
	file_clavata_gateway_v1_invites_proto_goTypes = nil
	file_clavata_gateway_v1_invites_proto_depIdxs = nil
}
