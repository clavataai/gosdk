// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: clavata/gateway/v1/content.proto

package v1

import (
	v1 "github.com/clavataai/gosdk/internal/protobufs/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddToCustomerContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content data to be added to customer content
	ContentData []*v1.ContentData `protobuf:"bytes,1,rep,name=content_data,json=contentData,proto3" json:"content_data,omitempty"`
	// The labels to be added to the content
	Labels []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *AddToCustomerContentRequest) Reset() {
	*x = AddToCustomerContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToCustomerContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToCustomerContentRequest) ProtoMessage() {}

func (x *AddToCustomerContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToCustomerContentRequest.ProtoReflect.Descriptor instead.
func (*AddToCustomerContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{0}
}

func (x *AddToCustomerContentRequest) GetContentData() []*v1.ContentData {
	if x != nil {
		return x.ContentData
	}
	return nil
}

func (x *AddToCustomerContentRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AddToCustomerContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uuids of content that was added to customer content
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
}

func (x *AddToCustomerContentResponse) Reset() {
	*x = AddToCustomerContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToCustomerContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToCustomerContentResponse) ProtoMessage() {}

func (x *AddToCustomerContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToCustomerContentResponse.ProtoReflect.Descriptor instead.
func (*AddToCustomerContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{1}
}

func (x *AddToCustomerContentResponse) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

type GetCustomerContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uuids of the content to retrieve
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
}

func (x *GetCustomerContentRequest) Reset() {
	*x = GetCustomerContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerContentRequest) ProtoMessage() {}

func (x *GetCustomerContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerContentRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{2}
}

func (x *GetCustomerContentRequest) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

type GetCustomerContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []*GetCustomerContentResponse_ExtendedContentData `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *GetCustomerContentResponse) Reset() {
	*x = GetCustomerContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerContentResponse) ProtoMessage() {}

func (x *GetCustomerContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerContentResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{3}
}

func (x *GetCustomerContentResponse) GetContents() []*GetCustomerContentResponse_ExtendedContentData {
	if x != nil {
		return x.Contents
	}
	return nil
}

type DeleteFromCustomerContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uuids of content to be deleted from the customer content
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
}

func (x *DeleteFromCustomerContentRequest) Reset() {
	*x = DeleteFromCustomerContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromCustomerContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromCustomerContentRequest) ProtoMessage() {}

func (x *DeleteFromCustomerContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromCustomerContentRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromCustomerContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFromCustomerContentRequest) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

type DeleteFromCustomerContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uuids of deleted customer content
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
	// The list of conflicts
	Conflicts []*DeleteFromCustomerContentResponse_DatasetConflict `protobuf:"bytes,2,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
}

func (x *DeleteFromCustomerContentResponse) Reset() {
	*x = DeleteFromCustomerContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromCustomerContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromCustomerContentResponse) ProtoMessage() {}

func (x *DeleteFromCustomerContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromCustomerContentResponse.ProtoReflect.Descriptor instead.
func (*DeleteFromCustomerContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFromCustomerContentResponse) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

func (x *DeleteFromCustomerContentResponse) GetConflicts() []*DeleteFromCustomerContentResponse_DatasetConflict {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type UpdateCustomerContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of updates to apply
	Updates []*UpdateCustomerContentsRequest_Body `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateCustomerContentsRequest) Reset() {
	*x = UpdateCustomerContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerContentsRequest) ProtoMessage() {}

func (x *UpdateCustomerContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerContentsRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomerContentsRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCustomerContentsRequest) GetUpdates() []*UpdateCustomerContentsRequest_Body {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateCustomerContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUIDs of CustomerContent entries that were successfully updated
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
}

func (x *UpdateCustomerContentsResponse) Reset() {
	*x = UpdateCustomerContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerContentsResponse) ProtoMessage() {}

func (x *UpdateCustomerContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerContentsResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomerContentsResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCustomerContentsResponse) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

type ListCustomerContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query to filter the customer content
	Query *ListCustomerContentRequest_Query `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *ListCustomerContentRequest) Reset() {
	*x = ListCustomerContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerContentRequest) ProtoMessage() {}

func (x *ListCustomerContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerContentRequest.ProtoReflect.Descriptor instead.
func (*ListCustomerContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{8}
}

func (x *ListCustomerContentRequest) GetQuery() *ListCustomerContentRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListCustomerContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested customer content
	// repeated shared.v1.ContentData content_data = 1;
	CustomerContentIds []string `protobuf:"bytes,1,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
}

func (x *ListCustomerContentResponse) Reset() {
	*x = ListCustomerContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerContentResponse) ProtoMessage() {}

func (x *ListCustomerContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerContentResponse.ProtoReflect.Descriptor instead.
func (*ListCustomerContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{9}
}

func (x *ListCustomerContentResponse) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

type ListCustomerContentLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCustomerContentLabelsRequest) Reset() {
	*x = ListCustomerContentLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerContentLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerContentLabelsRequest) ProtoMessage() {}

func (x *ListCustomerContentLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerContentLabelsRequest.ProtoReflect.Descriptor instead.
func (*ListCustomerContentLabelsRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{10}
}

type ListCustomerContentLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of all labels in customer contents
	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ListCustomerContentLabelsResponse) Reset() {
	*x = ListCustomerContentLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerContentLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerContentLabelsResponse) ProtoMessage() {}

func (x *ListCustomerContentLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerContentLabelsResponse.ProtoReflect.Descriptor instead.
func (*ListCustomerContentLabelsResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{11}
}

func (x *ListCustomerContentLabelsResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// The content data
type GetCustomerContentResponse_ExtendedContentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The customer content id
	CustomerContentId string `protobuf:"bytes,1,opt,name=customer_content_id,json=customerContentId,proto3" json:"customer_content_id,omitempty"`
	// The content data
	ContentData *v1.ContentData `protobuf:"bytes,2,opt,name=content_data,json=contentData,proto3" json:"content_data,omitempty"`
}

func (x *GetCustomerContentResponse_ExtendedContentData) Reset() {
	*x = GetCustomerContentResponse_ExtendedContentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerContentResponse_ExtendedContentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerContentResponse_ExtendedContentData) ProtoMessage() {}

func (x *GetCustomerContentResponse_ExtendedContentData) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerContentResponse_ExtendedContentData.ProtoReflect.Descriptor instead.
func (*GetCustomerContentResponse_ExtendedContentData) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetCustomerContentResponse_ExtendedContentData) GetCustomerContentId() string {
	if x != nil {
		return x.CustomerContentId
	}
	return ""
}

func (x *GetCustomerContentResponse_ExtendedContentData) GetContentData() *v1.ContentData {
	if x != nil {
		return x.ContentData
	}
	return nil
}

type DeleteFromCustomerContentResponse_DatasetConflictValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// conflicting dataset id
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// conflicting dataset name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteFromCustomerContentResponse_DatasetConflictValue) Reset() {
	*x = DeleteFromCustomerContentResponse_DatasetConflictValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromCustomerContentResponse_DatasetConflictValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromCustomerContentResponse_DatasetConflictValue) ProtoMessage() {}

func (x *DeleteFromCustomerContentResponse_DatasetConflictValue) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromCustomerContentResponse_DatasetConflictValue.ProtoReflect.Descriptor instead.
func (*DeleteFromCustomerContentResponse_DatasetConflictValue) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DeleteFromCustomerContentResponse_DatasetConflictValue) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *DeleteFromCustomerContentResponse_DatasetConflictValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteFromCustomerContentResponse_DatasetConflict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The customer content id
	CustomerContentId string `protobuf:"bytes,1,opt,name=customer_content_id,json=customerContentId,proto3" json:"customer_content_id,omitempty"`
	// The list of dataset conflicts
	Datasets []*DeleteFromCustomerContentResponse_DatasetConflictValue `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *DeleteFromCustomerContentResponse_DatasetConflict) Reset() {
	*x = DeleteFromCustomerContentResponse_DatasetConflict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromCustomerContentResponse_DatasetConflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromCustomerContentResponse_DatasetConflict) ProtoMessage() {}

func (x *DeleteFromCustomerContentResponse_DatasetConflict) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromCustomerContentResponse_DatasetConflict.ProtoReflect.Descriptor instead.
func (*DeleteFromCustomerContentResponse_DatasetConflict) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{5, 1}
}

func (x *DeleteFromCustomerContentResponse_DatasetConflict) GetCustomerContentId() string {
	if x != nil {
		return x.CustomerContentId
	}
	return ""
}

func (x *DeleteFromCustomerContentResponse_DatasetConflict) GetDatasets() []*DeleteFromCustomerContentResponse_DatasetConflictValue {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type UpdateCustomerContentsRequest_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the CustomerContent to update
	CustomerContentId string `protobuf:"bytes,1,opt,name=customer_content_id,json=customerContentId,proto3" json:"customer_content_id,omitempty"`
	// Which fields to update
	Update *UpdateCustomerContentsRequest_Body_Update `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *UpdateCustomerContentsRequest_Body) Reset() {
	*x = UpdateCustomerContentsRequest_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerContentsRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerContentsRequest_Body) ProtoMessage() {}

func (x *UpdateCustomerContentsRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerContentsRequest_Body.ProtoReflect.Descriptor instead.
func (*UpdateCustomerContentsRequest_Body) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateCustomerContentsRequest_Body) GetCustomerContentId() string {
	if x != nil {
		return x.CustomerContentId
	}
	return ""
}

func (x *UpdateCustomerContentsRequest_Body) GetUpdate() *UpdateCustomerContentsRequest_Body_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

type UpdateCustomerContentsRequest_Body_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to update e.g. update_maske : {paths: ["labels", "title"]}
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Optional: The title to update (only for image content)
	Title *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Optional: The text to update (only for text content)
	Text *string `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
	// Optional: The labels to update
	Labels []string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *UpdateCustomerContentsRequest_Body_Update) Reset() {
	*x = UpdateCustomerContentsRequest_Body_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerContentsRequest_Body_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerContentsRequest_Body_Update) ProtoMessage() {}

func (x *UpdateCustomerContentsRequest_Body_Update) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerContentsRequest_Body_Update.ProtoReflect.Descriptor instead.
func (*UpdateCustomerContentsRequest_Body_Update) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *UpdateCustomerContentsRequest_Body_Update) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateCustomerContentsRequest_Body_Update) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateCustomerContentsRequest_Body_Update) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *UpdateCustomerContentsRequest_Body_Update) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListCustomerContentRequest_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels            []string             `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	ContentModalities []v1.ContentModality `protobuf:"varint,2,rep,packed,name=content_modalities,json=contentModalities,proto3,enum=clavata.shared.v1.ContentModality" json:"content_modalities,omitempty"`
	Content           string               `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ListCustomerContentRequest_Query) Reset() {
	*x = ListCustomerContentRequest_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_content_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerContentRequest_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerContentRequest_Query) ProtoMessage() {}

func (x *ListCustomerContentRequest_Query) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_content_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerContentRequest_Query.ProtoReflect.Descriptor instead.
func (*ListCustomerContentRequest_Query) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_content_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListCustomerContentRequest_Query) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListCustomerContentRequest_Query) GetContentModalities() []v1.ContentModality {
	if x != nil {
		return x.ContentModalities
	}
	return nil
}

func (x *ListCustomerContentRequest_Query) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_clavata_gateway_v1_content_proto protoreflect.FileDescriptor

var file_clavata_gateway_v1_content_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x50, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x88, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a,
	0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x63, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73,
	0x1a, 0x49, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xa9, 0x01, 0x0a, 0x0f,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x66, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22, 0xa8, 0x03, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0xb4, 0x02, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0xa4, 0x01, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x52, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x8c, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x4f, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x22, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x32, 0x8f, 0x06, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x61, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x73, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clavata_gateway_v1_content_proto_rawDescOnce sync.Once
	file_clavata_gateway_v1_content_proto_rawDescData = file_clavata_gateway_v1_content_proto_rawDesc
)

func file_clavata_gateway_v1_content_proto_rawDescGZIP() []byte {
	file_clavata_gateway_v1_content_proto_rawDescOnce.Do(func() {
		file_clavata_gateway_v1_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_clavata_gateway_v1_content_proto_rawDescData)
	})
	return file_clavata_gateway_v1_content_proto_rawDescData
}

var file_clavata_gateway_v1_content_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_clavata_gateway_v1_content_proto_goTypes = []any{
	(*AddToCustomerContentRequest)(nil),                            // 0: clavata.gateway.v1.AddToCustomerContentRequest
	(*AddToCustomerContentResponse)(nil),                           // 1: clavata.gateway.v1.AddToCustomerContentResponse
	(*GetCustomerContentRequest)(nil),                              // 2: clavata.gateway.v1.GetCustomerContentRequest
	(*GetCustomerContentResponse)(nil),                             // 3: clavata.gateway.v1.GetCustomerContentResponse
	(*DeleteFromCustomerContentRequest)(nil),                       // 4: clavata.gateway.v1.DeleteFromCustomerContentRequest
	(*DeleteFromCustomerContentResponse)(nil),                      // 5: clavata.gateway.v1.DeleteFromCustomerContentResponse
	(*UpdateCustomerContentsRequest)(nil),                          // 6: clavata.gateway.v1.UpdateCustomerContentsRequest
	(*UpdateCustomerContentsResponse)(nil),                         // 7: clavata.gateway.v1.UpdateCustomerContentsResponse
	(*ListCustomerContentRequest)(nil),                             // 8: clavata.gateway.v1.ListCustomerContentRequest
	(*ListCustomerContentResponse)(nil),                            // 9: clavata.gateway.v1.ListCustomerContentResponse
	(*ListCustomerContentLabelsRequest)(nil),                       // 10: clavata.gateway.v1.ListCustomerContentLabelsRequest
	(*ListCustomerContentLabelsResponse)(nil),                      // 11: clavata.gateway.v1.ListCustomerContentLabelsResponse
	(*GetCustomerContentResponse_ExtendedContentData)(nil),         // 12: clavata.gateway.v1.GetCustomerContentResponse.ExtendedContentData
	(*DeleteFromCustomerContentResponse_DatasetConflictValue)(nil), // 13: clavata.gateway.v1.DeleteFromCustomerContentResponse.DatasetConflictValue
	(*DeleteFromCustomerContentResponse_DatasetConflict)(nil),      // 14: clavata.gateway.v1.DeleteFromCustomerContentResponse.DatasetConflict
	(*UpdateCustomerContentsRequest_Body)(nil),                     // 15: clavata.gateway.v1.UpdateCustomerContentsRequest.Body
	(*UpdateCustomerContentsRequest_Body_Update)(nil),              // 16: clavata.gateway.v1.UpdateCustomerContentsRequest.Body.Update
	(*ListCustomerContentRequest_Query)(nil),                       // 17: clavata.gateway.v1.ListCustomerContentRequest.Query
	(*v1.ContentData)(nil),                                         // 18: clavata.shared.v1.ContentData
	(*fieldmaskpb.FieldMask)(nil),                                  // 19: google.protobuf.FieldMask
	(v1.ContentModality)(0),                                        // 20: clavata.shared.v1.ContentModality
}
var file_clavata_gateway_v1_content_proto_depIdxs = []int32{
	18, // 0: clavata.gateway.v1.AddToCustomerContentRequest.content_data:type_name -> clavata.shared.v1.ContentData
	12, // 1: clavata.gateway.v1.GetCustomerContentResponse.contents:type_name -> clavata.gateway.v1.GetCustomerContentResponse.ExtendedContentData
	14, // 2: clavata.gateway.v1.DeleteFromCustomerContentResponse.conflicts:type_name -> clavata.gateway.v1.DeleteFromCustomerContentResponse.DatasetConflict
	15, // 3: clavata.gateway.v1.UpdateCustomerContentsRequest.updates:type_name -> clavata.gateway.v1.UpdateCustomerContentsRequest.Body
	17, // 4: clavata.gateway.v1.ListCustomerContentRequest.query:type_name -> clavata.gateway.v1.ListCustomerContentRequest.Query
	18, // 5: clavata.gateway.v1.GetCustomerContentResponse.ExtendedContentData.content_data:type_name -> clavata.shared.v1.ContentData
	13, // 6: clavata.gateway.v1.DeleteFromCustomerContentResponse.DatasetConflict.datasets:type_name -> clavata.gateway.v1.DeleteFromCustomerContentResponse.DatasetConflictValue
	16, // 7: clavata.gateway.v1.UpdateCustomerContentsRequest.Body.update:type_name -> clavata.gateway.v1.UpdateCustomerContentsRequest.Body.Update
	19, // 8: clavata.gateway.v1.UpdateCustomerContentsRequest.Body.Update.update_mask:type_name -> google.protobuf.FieldMask
	20, // 9: clavata.gateway.v1.ListCustomerContentRequest.Query.content_modalities:type_name -> clavata.shared.v1.ContentModality
	0,  // 10: clavata.gateway.v1.ContentService.AddToCustomerContent:input_type -> clavata.gateway.v1.AddToCustomerContentRequest
	2,  // 11: clavata.gateway.v1.ContentService.GetCustomerContent:input_type -> clavata.gateway.v1.GetCustomerContentRequest
	4,  // 12: clavata.gateway.v1.ContentService.DeleteFromCustomerContent:input_type -> clavata.gateway.v1.DeleteFromCustomerContentRequest
	6,  // 13: clavata.gateway.v1.ContentService.UpdateCustomerContents:input_type -> clavata.gateway.v1.UpdateCustomerContentsRequest
	8,  // 14: clavata.gateway.v1.ContentService.ListCustomerContent:input_type -> clavata.gateway.v1.ListCustomerContentRequest
	10, // 15: clavata.gateway.v1.ContentService.ListCustomerContentLabels:input_type -> clavata.gateway.v1.ListCustomerContentLabelsRequest
	1,  // 16: clavata.gateway.v1.ContentService.AddToCustomerContent:output_type -> clavata.gateway.v1.AddToCustomerContentResponse
	3,  // 17: clavata.gateway.v1.ContentService.GetCustomerContent:output_type -> clavata.gateway.v1.GetCustomerContentResponse
	5,  // 18: clavata.gateway.v1.ContentService.DeleteFromCustomerContent:output_type -> clavata.gateway.v1.DeleteFromCustomerContentResponse
	7,  // 19: clavata.gateway.v1.ContentService.UpdateCustomerContents:output_type -> clavata.gateway.v1.UpdateCustomerContentsResponse
	9,  // 20: clavata.gateway.v1.ContentService.ListCustomerContent:output_type -> clavata.gateway.v1.ListCustomerContentResponse
	11, // 21: clavata.gateway.v1.ContentService.ListCustomerContentLabels:output_type -> clavata.gateway.v1.ListCustomerContentLabelsResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_clavata_gateway_v1_content_proto_init() }
func file_clavata_gateway_v1_content_proto_init() {
	if File_clavata_gateway_v1_content_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clavata_gateway_v1_content_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddToCustomerContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddToCustomerContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCustomerContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetCustomerContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFromCustomerContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFromCustomerContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCustomerContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCustomerContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListCustomerContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListCustomerContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListCustomerContentLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListCustomerContentLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetCustomerContentResponse_ExtendedContentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFromCustomerContentResponse_DatasetConflictValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFromCustomerContentResponse_DatasetConflict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCustomerContentsRequest_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCustomerContentsRequest_Body_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_content_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListCustomerContentRequest_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_clavata_gateway_v1_content_proto_msgTypes[8].OneofWrappers = []any{}
	file_clavata_gateway_v1_content_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clavata_gateway_v1_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clavata_gateway_v1_content_proto_goTypes,
		DependencyIndexes: file_clavata_gateway_v1_content_proto_depIdxs,
		MessageInfos:      file_clavata_gateway_v1_content_proto_msgTypes,
	}.Build()
	File_clavata_gateway_v1_content_proto = out.File
	file_clavata_gateway_v1_content_proto_rawDesc = nil
	file_clavata_gateway_v1_content_proto_goTypes = nil
	file_clavata_gateway_v1_content_proto_depIdxs = nil
}
