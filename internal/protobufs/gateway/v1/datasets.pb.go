// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: clavata/gateway/v1/datasets.proto

package v1

import (
	v1 "github.com/clavataai/gosdk/internal/protobufs/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDatasetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Include public datasets in the response?
	IncludePublic bool `protobuf:"varint,1,opt,name=include_public,json=includePublic,proto3" json:"include_public,omitempty"`
}

func (x *ListDatasetsRequest) Reset() {
	*x = ListDatasetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsRequest) ProtoMessage() {}

func (x *ListDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{0}
}

func (x *ListDatasetsRequest) GetIncludePublic() bool {
	if x != nil {
		return x.IncludePublic
	}
	return false
}

type ListDatasetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*ListDatasetsResponse_Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *ListDatasetsResponse) Reset() {
	*x = ListDatasetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse) ProtoMessage() {}

func (x *ListDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{1}
}

func (x *ListDatasetsResponse) GetDatasets() []*ListDatasetsResponse_Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type CreateDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Notes string `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *CreateDatasetRequest) Reset() {
	*x = CreateDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetRequest) ProtoMessage() {}

func (x *CreateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDatasetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDatasetRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type CreateDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *CreateDatasetResponse) Reset() {
	*x = CreateDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetResponse) ProtoMessage() {}

func (x *CreateDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetResponse.ProtoReflect.Descriptor instead.
func (*CreateDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDatasetResponse) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type AppendContentToDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId          string   `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	CustomerContentIds []string `protobuf:"bytes,2,rep,name=customer_content_ids,json=customerContentIds,proto3" json:"customer_content_ids,omitempty"`
	Labels             []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *AppendContentToDatasetRequest) Reset() {
	*x = AppendContentToDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendContentToDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendContentToDatasetRequest) ProtoMessage() {}

func (x *AppendContentToDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendContentToDatasetRequest.ProtoReflect.Descriptor instead.
func (*AppendContentToDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{4}
}

func (x *AppendContentToDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *AppendContentToDatasetRequest) GetCustomerContentIds() []string {
	if x != nil {
		return x.CustomerContentIds
	}
	return nil
}

func (x *AppendContentToDatasetRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AppendContentToDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AppendContentToDatasetResponse) Reset() {
	*x = AppendContentToDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendContentToDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendContentToDatasetResponse) ProtoMessage() {}

func (x *AppendContentToDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendContentToDatasetResponse.ProtoReflect.Descriptor instead.
func (*AppendContentToDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{5}
}

func (x *AppendContentToDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AppendApiContentToDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId               string                                                    `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	ContentHashesWithLabels []*AppendApiContentToDatasetRequest_ContentHashWithLabels `protobuf:"bytes,2,rep,name=content_hashes_with_labels,json=contentHashesWithLabels,proto3" json:"content_hashes_with_labels,omitempty"`
	// Overwrite content labels to the all new dataset items
	OverrideLabels []string `protobuf:"bytes,3,rep,name=override_labels,json=overrideLabels,proto3" json:"override_labels,omitempty"`
}

func (x *AppendApiContentToDatasetRequest) Reset() {
	*x = AppendApiContentToDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendApiContentToDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendApiContentToDatasetRequest) ProtoMessage() {}

func (x *AppendApiContentToDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendApiContentToDatasetRequest.ProtoReflect.Descriptor instead.
func (*AppendApiContentToDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{6}
}

func (x *AppendApiContentToDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *AppendApiContentToDatasetRequest) GetContentHashesWithLabels() []*AppendApiContentToDatasetRequest_ContentHashWithLabels {
	if x != nil {
		return x.ContentHashesWithLabels
	}
	return nil
}

func (x *AppendApiContentToDatasetRequest) GetOverrideLabels() []string {
	if x != nil {
		return x.OverrideLabels
	}
	return nil
}

type AppendApiContentToDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AppendApiContentToDatasetResponse) Reset() {
	*x = AppendApiContentToDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendApiContentToDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendApiContentToDatasetResponse) ProtoMessage() {}

func (x *AppendApiContentToDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendApiContentToDatasetResponse.ProtoReflect.Descriptor instead.
func (*AppendApiContentToDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{7}
}

func (x *AppendApiContentToDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListDatasetContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// The query to filter the customer content
	Query *ListDatasetContentRequest_Query `protobuf:"bytes,2,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *ListDatasetContentRequest) Reset() {
	*x = ListDatasetContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetContentRequest) ProtoMessage() {}

func (x *ListDatasetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetContentRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{8}
}

func (x *ListDatasetContentRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ListDatasetContentRequest) GetQuery() *ListDatasetContentRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListDatasetContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ListDatasetContentResponse_DatasetItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListDatasetContentResponse) Reset() {
	*x = ListDatasetContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetContentResponse) ProtoMessage() {}

func (x *ListDatasetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetContentResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{9}
}

func (x *ListDatasetContentResponse) GetItems() []*ListDatasetContentResponse_DatasetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetDatasetContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId      string   `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	DatasetItemIds []string `protobuf:"bytes,2,rep,name=dataset_item_ids,json=datasetItemIds,proto3" json:"dataset_item_ids,omitempty"`
}

func (x *GetDatasetContentRequest) Reset() {
	*x = GetDatasetContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetContentRequest) ProtoMessage() {}

func (x *GetDatasetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetContentRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetContentRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{10}
}

func (x *GetDatasetContentRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *GetDatasetContentRequest) GetDatasetItemIds() []string {
	if x != nil {
		return x.DatasetItemIds
	}
	return nil
}

type GetDatasetContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []*GetDatasetContentResponse_ExtendedContentData `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *GetDatasetContentResponse) Reset() {
	*x = GetDatasetContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetContentResponse) ProtoMessage() {}

func (x *GetDatasetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetContentResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetContentResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{11}
}

func (x *GetDatasetContentResponse) GetContents() []*GetDatasetContentResponse_ExtendedContentData {
	if x != nil {
		return x.Contents
	}
	return nil
}

type DeleteDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetIds []string `protobuf:"bytes,1,rep,name=dataset_ids,json=datasetIds,proto3" json:"dataset_ids,omitempty"`
}

func (x *DeleteDatasetRequest) Reset() {
	*x = DeleteDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetRequest) ProtoMessage() {}

func (x *DeleteDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteDatasetRequest) GetDatasetIds() []string {
	if x != nil {
		return x.DatasetIds
	}
	return nil
}

type DeleteDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteDatasetResponse) Reset() {
	*x = DeleteDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetResponse) ProtoMessage() {}

func (x *DeleteDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RemoveFromDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId      string   `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	DatasetItemIds []string `protobuf:"bytes,2,rep,name=dataset_item_ids,json=datasetItemIds,proto3" json:"dataset_item_ids,omitempty"`
}

func (x *RemoveFromDatasetRequest) Reset() {
	*x = RemoveFromDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromDatasetRequest) ProtoMessage() {}

func (x *RemoveFromDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromDatasetRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveFromDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *RemoveFromDatasetRequest) GetDatasetItemIds() []string {
	if x != nil {
		return x.DatasetItemIds
	}
	return nil
}

type RemoveFromDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RemoveFromDatasetResponse) Reset() {
	*x = RemoveFromDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromDatasetResponse) ProtoMessage() {}

func (x *RemoveFromDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromDatasetResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveFromDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListDatasetLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *ListDatasetLabelsRequest) Reset() {
	*x = ListDatasetLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetLabelsRequest) ProtoMessage() {}

func (x *ListDatasetLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetLabelsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetLabelsRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{16}
}

func (x *ListDatasetLabelsRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type ListDatasetLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of all labels in customer's dataset items
	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ListDatasetLabelsResponse) Reset() {
	*x = ListDatasetLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetLabelsResponse) ProtoMessage() {}

func (x *ListDatasetLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetLabelsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetLabelsResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{17}
}

func (x *ListDatasetLabelsResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateDatasetItemLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uuids of dataset
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// ids of dataset items to update
	DatasetItemIds []string `protobuf:"bytes,2,rep,name=dataset_item_ids,json=datasetItemIds,proto3" json:"dataset_item_ids,omitempty"`
	// The labels to update
	Labels []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *UpdateDatasetItemLabelsRequest) Reset() {
	*x = UpdateDatasetItemLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetItemLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetItemLabelsRequest) ProtoMessage() {}

func (x *UpdateDatasetItemLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetItemLabelsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasetItemLabelsRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateDatasetItemLabelsRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *UpdateDatasetItemLabelsRequest) GetDatasetItemIds() []string {
	if x != nil {
		return x.DatasetItemIds
	}
	return nil
}

func (x *UpdateDatasetItemLabelsRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateDatasetItemLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uuids of dataset items that were pdated
	DatasetItemIds []string `protobuf:"bytes,1,rep,name=dataset_item_ids,json=datasetItemIds,proto3" json:"dataset_item_ids,omitempty"`
}

func (x *UpdateDatasetItemLabelsResponse) Reset() {
	*x = UpdateDatasetItemLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetItemLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetItemLabelsResponse) ProtoMessage() {}

func (x *UpdateDatasetItemLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetItemLabelsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDatasetItemLabelsResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDatasetItemLabelsResponse) GetDatasetItemIds() []string {
	if x != nil {
		return x.DatasetItemIds
	}
	return nil
}

type UpdateDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string  `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Name      *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Notes     *string `protobuf:"bytes,3,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
}

func (x *UpdateDatasetRequest) Reset() {
	*x = UpdateDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetRequest) ProtoMessage() {}

func (x *UpdateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *UpdateDatasetRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDatasetRequest) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

type UpdateDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateDatasetResponse) Reset() {
	*x = UpdateDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetResponse) ProtoMessage() {}

func (x *UpdateDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetResponse.ProtoReflect.Descriptor instead.
func (*UpdateDatasetResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ClonePublicDatasetToAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceDatasetId   string `protobuf:"bytes,1,opt,name=source_dataset_id,json=sourceDatasetId,proto3" json:"source_dataset_id,omitempty"`
	ClonedDatasetName string `protobuf:"bytes,2,opt,name=cloned_dataset_name,json=clonedDatasetName,proto3" json:"cloned_dataset_name,omitempty"`
}

func (x *ClonePublicDatasetToAccountRequest) Reset() {
	*x = ClonePublicDatasetToAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClonePublicDatasetToAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClonePublicDatasetToAccountRequest) ProtoMessage() {}

func (x *ClonePublicDatasetToAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClonePublicDatasetToAccountRequest.ProtoReflect.Descriptor instead.
func (*ClonePublicDatasetToAccountRequest) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{22}
}

func (x *ClonePublicDatasetToAccountRequest) GetSourceDatasetId() string {
	if x != nil {
		return x.SourceDatasetId
	}
	return ""
}

func (x *ClonePublicDatasetToAccountRequest) GetClonedDatasetName() string {
	if x != nil {
		return x.ClonedDatasetName
	}
	return ""
}

type ClonePublicDatasetToAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId       string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	SourceDatasetId string `protobuf:"bytes,2,opt,name=source_dataset_id,json=sourceDatasetId,proto3" json:"source_dataset_id,omitempty"`
}

func (x *ClonePublicDatasetToAccountResponse) Reset() {
	*x = ClonePublicDatasetToAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClonePublicDatasetToAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClonePublicDatasetToAccountResponse) ProtoMessage() {}

func (x *ClonePublicDatasetToAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClonePublicDatasetToAccountResponse.ProtoReflect.Descriptor instead.
func (*ClonePublicDatasetToAccountResponse) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{23}
}

func (x *ClonePublicDatasetToAccountResponse) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ClonePublicDatasetToAccountResponse) GetSourceDatasetId() string {
	if x != nil {
		return x.SourceDatasetId
	}
	return ""
}

type ListDatasetsResponse_Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string                 `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Notes     string                 `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	Public    bool                   `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ListDatasetsResponse_Dataset) Reset() {
	*x = ListDatasetsResponse_Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsResponse_Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse_Dataset) ProtoMessage() {}

func (x *ListDatasetsResponse_Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse_Dataset.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse_Dataset) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListDatasetsResponse_Dataset) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ListDatasetsResponse_Dataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDatasetsResponse_Dataset) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ListDatasetsResponse_Dataset) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *ListDatasetsResponse_Dataset) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ListDatasetsResponse_Dataset) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type AppendApiContentToDatasetRequest_ContentHashWithLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentHash string   `protobuf:"bytes,1,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"`
	Labels      []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *AppendApiContentToDatasetRequest_ContentHashWithLabels) Reset() {
	*x = AppendApiContentToDatasetRequest_ContentHashWithLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendApiContentToDatasetRequest_ContentHashWithLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendApiContentToDatasetRequest_ContentHashWithLabels) ProtoMessage() {}

func (x *AppendApiContentToDatasetRequest_ContentHashWithLabels) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendApiContentToDatasetRequest_ContentHashWithLabels.ProtoReflect.Descriptor instead.
func (*AppendApiContentToDatasetRequest_ContentHashWithLabels) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AppendApiContentToDatasetRequest_ContentHashWithLabels) GetContentHash() string {
	if x != nil {
		return x.ContentHash
	}
	return ""
}

func (x *AppendApiContentToDatasetRequest_ContentHashWithLabels) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListDatasetContentRequest_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels            []string             `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	ContentModalities []v1.ContentModality `protobuf:"varint,2,rep,packed,name=content_modalities,json=contentModalities,proto3,enum=clavata.shared.v1.ContentModality" json:"content_modalities,omitempty"`
	Content           string               `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ListDatasetContentRequest_Query) Reset() {
	*x = ListDatasetContentRequest_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetContentRequest_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetContentRequest_Query) ProtoMessage() {}

func (x *ListDatasetContentRequest_Query) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetContentRequest_Query.ProtoReflect.Descriptor instead.
func (*ListDatasetContentRequest_Query) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListDatasetContentRequest_Query) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListDatasetContentRequest_Query) GetContentModalities() []v1.ContentModality {
	if x != nil {
		return x.ContentModalities
	}
	return nil
}

func (x *ListDatasetContentRequest_Query) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListDatasetContentResponse_DatasetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DatasetId         string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	CustomerContentId string `protobuf:"bytes,3,opt,name=customer_content_id,json=customerContentId,proto3" json:"customer_content_id,omitempty"`
}

func (x *ListDatasetContentResponse_DatasetItem) Reset() {
	*x = ListDatasetContentResponse_DatasetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetContentResponse_DatasetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetContentResponse_DatasetItem) ProtoMessage() {}

func (x *ListDatasetContentResponse_DatasetItem) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetContentResponse_DatasetItem.ProtoReflect.Descriptor instead.
func (*ListDatasetContentResponse_DatasetItem) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListDatasetContentResponse_DatasetItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListDatasetContentResponse_DatasetItem) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ListDatasetContentResponse_DatasetItem) GetCustomerContentId() string {
	if x != nil {
		return x.CustomerContentId
	}
	return ""
}

// The content data
type GetDatasetContentResponse_ExtendedContentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The customer content id
	CustomerContentId string `protobuf:"bytes,1,opt,name=customer_content_id,json=customerContentId,proto3" json:"customer_content_id,omitempty"`
	// dataset item id
	DatasetItemId string `protobuf:"bytes,2,opt,name=dataset_item_id,json=datasetItemId,proto3" json:"dataset_item_id,omitempty"`
	// The content data
	ContentData *v1.ContentData `protobuf:"bytes,3,opt,name=content_data,json=contentData,proto3" json:"content_data,omitempty"`
}

func (x *GetDatasetContentResponse_ExtendedContentData) Reset() {
	*x = GetDatasetContentResponse_ExtendedContentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetContentResponse_ExtendedContentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetContentResponse_ExtendedContentData) ProtoMessage() {}

func (x *GetDatasetContentResponse_ExtendedContentData) ProtoReflect() protoreflect.Message {
	mi := &file_clavata_gateway_v1_datasets_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetContentResponse_ExtendedContentData.ProtoReflect.Descriptor instead.
func (*GetDatasetContentResponse_ExtendedContentData) Descriptor() ([]byte, []int) {
	return file_clavata_gateway_v1_datasets_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetDatasetContentResponse_ExtendedContentData) GetCustomerContentId() string {
	if x != nil {
		return x.CustomerContentId
	}
	return ""
}

func (x *GetDatasetContentResponse_ExtendedContentData) GetDatasetItemId() string {
	if x != nil {
		return x.DatasetItemId
	}
	return ""
}

func (x *GetDatasetContentResponse_ExtendedContentData) GetContentData() *v1.ContentData {
	if x != nil {
		return x.ContentData
	}
	return nil
}

var File_clavata_gateway_v1_datasets_proto protoreflect.FileDescriptor

var file_clavata_gateway_v1_datasets_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0xbd, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x1a, 0xd6, 0x01,
	0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x88, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x3a, 0x0a, 0x1e, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x87, 0x01, 0x0a, 0x1a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4a, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x17, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x52,
	0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x57, 0x69, 0x74,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x3d, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0xa3, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4e,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x8c,
	0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x51, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6c,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xb0, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x19,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x39, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x33,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x4b, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x22, 0x7c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x22, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x23, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x6f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x32, 0x93, 0x0b, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x27,
	0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d,
	0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x28, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12,
	0x28, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x61, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73,
	0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_clavata_gateway_v1_datasets_proto_rawDescOnce sync.Once
	file_clavata_gateway_v1_datasets_proto_rawDescData = file_clavata_gateway_v1_datasets_proto_rawDesc
)

func file_clavata_gateway_v1_datasets_proto_rawDescGZIP() []byte {
	file_clavata_gateway_v1_datasets_proto_rawDescOnce.Do(func() {
		file_clavata_gateway_v1_datasets_proto_rawDescData = protoimpl.X.CompressGZIP(file_clavata_gateway_v1_datasets_proto_rawDescData)
	})
	return file_clavata_gateway_v1_datasets_proto_rawDescData
}

var file_clavata_gateway_v1_datasets_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_clavata_gateway_v1_datasets_proto_goTypes = []any{
	(*ListDatasetsRequest)(nil),                                    // 0: clavata.gateway.v1.ListDatasetsRequest
	(*ListDatasetsResponse)(nil),                                   // 1: clavata.gateway.v1.ListDatasetsResponse
	(*CreateDatasetRequest)(nil),                                   // 2: clavata.gateway.v1.CreateDatasetRequest
	(*CreateDatasetResponse)(nil),                                  // 3: clavata.gateway.v1.CreateDatasetResponse
	(*AppendContentToDatasetRequest)(nil),                          // 4: clavata.gateway.v1.AppendContentToDatasetRequest
	(*AppendContentToDatasetResponse)(nil),                         // 5: clavata.gateway.v1.AppendContentToDatasetResponse
	(*AppendApiContentToDatasetRequest)(nil),                       // 6: clavata.gateway.v1.AppendApiContentToDatasetRequest
	(*AppendApiContentToDatasetResponse)(nil),                      // 7: clavata.gateway.v1.AppendApiContentToDatasetResponse
	(*ListDatasetContentRequest)(nil),                              // 8: clavata.gateway.v1.ListDatasetContentRequest
	(*ListDatasetContentResponse)(nil),                             // 9: clavata.gateway.v1.ListDatasetContentResponse
	(*GetDatasetContentRequest)(nil),                               // 10: clavata.gateway.v1.GetDatasetContentRequest
	(*GetDatasetContentResponse)(nil),                              // 11: clavata.gateway.v1.GetDatasetContentResponse
	(*DeleteDatasetRequest)(nil),                                   // 12: clavata.gateway.v1.DeleteDatasetRequest
	(*DeleteDatasetResponse)(nil),                                  // 13: clavata.gateway.v1.DeleteDatasetResponse
	(*RemoveFromDatasetRequest)(nil),                               // 14: clavata.gateway.v1.RemoveFromDatasetRequest
	(*RemoveFromDatasetResponse)(nil),                              // 15: clavata.gateway.v1.RemoveFromDatasetResponse
	(*ListDatasetLabelsRequest)(nil),                               // 16: clavata.gateway.v1.ListDatasetLabelsRequest
	(*ListDatasetLabelsResponse)(nil),                              // 17: clavata.gateway.v1.ListDatasetLabelsResponse
	(*UpdateDatasetItemLabelsRequest)(nil),                         // 18: clavata.gateway.v1.UpdateDatasetItemLabelsRequest
	(*UpdateDatasetItemLabelsResponse)(nil),                        // 19: clavata.gateway.v1.UpdateDatasetItemLabelsResponse
	(*UpdateDatasetRequest)(nil),                                   // 20: clavata.gateway.v1.UpdateDatasetRequest
	(*UpdateDatasetResponse)(nil),                                  // 21: clavata.gateway.v1.UpdateDatasetResponse
	(*ClonePublicDatasetToAccountRequest)(nil),                     // 22: clavata.gateway.v1.ClonePublicDatasetToAccountRequest
	(*ClonePublicDatasetToAccountResponse)(nil),                    // 23: clavata.gateway.v1.ClonePublicDatasetToAccountResponse
	(*ListDatasetsResponse_Dataset)(nil),                           // 24: clavata.gateway.v1.ListDatasetsResponse.Dataset
	(*AppendApiContentToDatasetRequest_ContentHashWithLabels)(nil), // 25: clavata.gateway.v1.AppendApiContentToDatasetRequest.ContentHashWithLabels
	(*ListDatasetContentRequest_Query)(nil),                        // 26: clavata.gateway.v1.ListDatasetContentRequest.Query
	(*ListDatasetContentResponse_DatasetItem)(nil),                 // 27: clavata.gateway.v1.ListDatasetContentResponse.DatasetItem
	(*GetDatasetContentResponse_ExtendedContentData)(nil),          // 28: clavata.gateway.v1.GetDatasetContentResponse.ExtendedContentData
	(*timestamppb.Timestamp)(nil),                                  // 29: google.protobuf.Timestamp
	(v1.ContentModality)(0),                                        // 30: clavata.shared.v1.ContentModality
	(*v1.ContentData)(nil),                                         // 31: clavata.shared.v1.ContentData
}
var file_clavata_gateway_v1_datasets_proto_depIdxs = []int32{
	24, // 0: clavata.gateway.v1.ListDatasetsResponse.datasets:type_name -> clavata.gateway.v1.ListDatasetsResponse.Dataset
	25, // 1: clavata.gateway.v1.AppendApiContentToDatasetRequest.content_hashes_with_labels:type_name -> clavata.gateway.v1.AppendApiContentToDatasetRequest.ContentHashWithLabels
	26, // 2: clavata.gateway.v1.ListDatasetContentRequest.query:type_name -> clavata.gateway.v1.ListDatasetContentRequest.Query
	27, // 3: clavata.gateway.v1.ListDatasetContentResponse.items:type_name -> clavata.gateway.v1.ListDatasetContentResponse.DatasetItem
	28, // 4: clavata.gateway.v1.GetDatasetContentResponse.contents:type_name -> clavata.gateway.v1.GetDatasetContentResponse.ExtendedContentData
	29, // 5: clavata.gateway.v1.ListDatasetsResponse.Dataset.created:type_name -> google.protobuf.Timestamp
	29, // 6: clavata.gateway.v1.ListDatasetsResponse.Dataset.updated:type_name -> google.protobuf.Timestamp
	30, // 7: clavata.gateway.v1.ListDatasetContentRequest.Query.content_modalities:type_name -> clavata.shared.v1.ContentModality
	31, // 8: clavata.gateway.v1.GetDatasetContentResponse.ExtendedContentData.content_data:type_name -> clavata.shared.v1.ContentData
	0,  // 9: clavata.gateway.v1.DatasetsService.ListDatasets:input_type -> clavata.gateway.v1.ListDatasetsRequest
	2,  // 10: clavata.gateway.v1.DatasetsService.CreateDataset:input_type -> clavata.gateway.v1.CreateDatasetRequest
	4,  // 11: clavata.gateway.v1.DatasetsService.AppendContentToDataset:input_type -> clavata.gateway.v1.AppendContentToDatasetRequest
	8,  // 12: clavata.gateway.v1.DatasetsService.ListDatasetContent:input_type -> clavata.gateway.v1.ListDatasetContentRequest
	10, // 13: clavata.gateway.v1.DatasetsService.GetDatasetContent:input_type -> clavata.gateway.v1.GetDatasetContentRequest
	12, // 14: clavata.gateway.v1.DatasetsService.DeleteDataset:input_type -> clavata.gateway.v1.DeleteDatasetRequest
	14, // 15: clavata.gateway.v1.DatasetsService.RemoveFromDataset:input_type -> clavata.gateway.v1.RemoveFromDatasetRequest
	16, // 16: clavata.gateway.v1.DatasetsService.ListDatasetLabels:input_type -> clavata.gateway.v1.ListDatasetLabelsRequest
	18, // 17: clavata.gateway.v1.DatasetsService.UpdateDatasetItemLabels:input_type -> clavata.gateway.v1.UpdateDatasetItemLabelsRequest
	20, // 18: clavata.gateway.v1.DatasetsService.UpdateDataset:input_type -> clavata.gateway.v1.UpdateDatasetRequest
	22, // 19: clavata.gateway.v1.DatasetsService.ClonePublicDatasetToAccount:input_type -> clavata.gateway.v1.ClonePublicDatasetToAccountRequest
	6,  // 20: clavata.gateway.v1.DatasetsService.AppendApiContentToDataset:input_type -> clavata.gateway.v1.AppendApiContentToDatasetRequest
	1,  // 21: clavata.gateway.v1.DatasetsService.ListDatasets:output_type -> clavata.gateway.v1.ListDatasetsResponse
	3,  // 22: clavata.gateway.v1.DatasetsService.CreateDataset:output_type -> clavata.gateway.v1.CreateDatasetResponse
	5,  // 23: clavata.gateway.v1.DatasetsService.AppendContentToDataset:output_type -> clavata.gateway.v1.AppendContentToDatasetResponse
	9,  // 24: clavata.gateway.v1.DatasetsService.ListDatasetContent:output_type -> clavata.gateway.v1.ListDatasetContentResponse
	11, // 25: clavata.gateway.v1.DatasetsService.GetDatasetContent:output_type -> clavata.gateway.v1.GetDatasetContentResponse
	13, // 26: clavata.gateway.v1.DatasetsService.DeleteDataset:output_type -> clavata.gateway.v1.DeleteDatasetResponse
	15, // 27: clavata.gateway.v1.DatasetsService.RemoveFromDataset:output_type -> clavata.gateway.v1.RemoveFromDatasetResponse
	17, // 28: clavata.gateway.v1.DatasetsService.ListDatasetLabels:output_type -> clavata.gateway.v1.ListDatasetLabelsResponse
	19, // 29: clavata.gateway.v1.DatasetsService.UpdateDatasetItemLabels:output_type -> clavata.gateway.v1.UpdateDatasetItemLabelsResponse
	21, // 30: clavata.gateway.v1.DatasetsService.UpdateDataset:output_type -> clavata.gateway.v1.UpdateDatasetResponse
	23, // 31: clavata.gateway.v1.DatasetsService.ClonePublicDatasetToAccount:output_type -> clavata.gateway.v1.ClonePublicDatasetToAccountResponse
	7,  // 32: clavata.gateway.v1.DatasetsService.AppendApiContentToDataset:output_type -> clavata.gateway.v1.AppendApiContentToDatasetResponse
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_clavata_gateway_v1_datasets_proto_init() }
func file_clavata_gateway_v1_datasets_proto_init() {
	if File_clavata_gateway_v1_datasets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clavata_gateway_v1_datasets_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AppendContentToDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AppendContentToDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AppendApiContentToDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AppendApiContentToDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveFromDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveFromDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDatasetItemLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDatasetItemLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ClonePublicDatasetToAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ClonePublicDatasetToAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetsResponse_Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AppendApiContentToDatasetRequest_ContentHashWithLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetContentRequest_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatasetContentResponse_DatasetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clavata_gateway_v1_datasets_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetContentResponse_ExtendedContentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_clavata_gateway_v1_datasets_proto_msgTypes[8].OneofWrappers = []any{}
	file_clavata_gateway_v1_datasets_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clavata_gateway_v1_datasets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clavata_gateway_v1_datasets_proto_goTypes,
		DependencyIndexes: file_clavata_gateway_v1_datasets_proto_depIdxs,
		MessageInfos:      file_clavata_gateway_v1_datasets_proto_msgTypes,
	}.Build()
	File_clavata_gateway_v1_datasets_proto = out.File
	file_clavata_gateway_v1_datasets_proto_rawDesc = nil
	file_clavata_gateway_v1_datasets_proto_goTypes = nil
	file_clavata_gateway_v1_datasets_proto_depIdxs = nil
}
